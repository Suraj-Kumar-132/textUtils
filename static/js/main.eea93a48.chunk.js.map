{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","backgroundColor","color","border","myStyle","setMyStyle","btntxt","setBtnTxt","className","style","class","id","type","onClick","Navbar","props","mode","to","title","aboutText","placeholder","toogleMode","htmlFor","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","body","setInterval","exacat","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eea93a48.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport default function About() {\r\n  const [myStyle,setMyStyle] =useState({\r\n    backgroundColor: 'black',\r\n    color:'white',\r\n    border :` 2px solid pink`\r\n  \r\n  });\r\n  const [btntxt, setBtnTxt] = useState('Enable Light Mode')  \r\n\r\n  const toogleStyle = () =>\r\n  {\r\n     if(myStyle.color === 'white')\r\n     {\r\n       setMyStyle({\r\n         color:'black',\r\n         backgroundColor : 'white'\r\n       })\r\n       setBtnTxt('Enable Dark Mode')\r\n       \r\n     }\r\n     else{\r\n       setMyStyle({\r\n         color:'white',\r\n         backgroundColor : 'black'\r\n       })\r\n       setBtnTxt('Enable Light Mode')\r\n     }\r\n  }\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1 className=\"container my-3\">About Us</h1>\r\n            \r\n            <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\"   style ={myStyle}  data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div class=\"accordion-body\" style ={myStyle}>Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" style ={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div class=\"accordion-body\" style ={myStyle}>Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"flush-headingThree\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\"  style ={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div class=\"accordion-body\" style ={myStyle} >Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container\">\r\n\r\n<button type=\"button\" onClick={toogleStyle} className=\"btn btn-dark\">{btntxt}</button>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div class={`form-check form-switch mx-3  text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toogleMode }type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark/Light Mode </label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>\r\n\r\n{\r\n    console.log('Upper Case button clicked'+ text );\r\n    // setText me jo v value dalenge wo text area me change kar begin jb button click karenge to usse \"handleClick\" function ko fire kare denge or ussi function me hm abhi ye comment v likh rhe hai isse ye hoga ki ye fir just niche wala me setText me jo v string linkenge usko text area me change kar dega \r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n}\r\n    const handleLoClick = () =>\r\n\r\n{\r\n    console.log('Upper Case button clicked'+ text );\r\n    // setText me jo v value dalenge wo text area me change kar begin jb button click karenge to usse \"handleClick\" function ko fire kare denge or ussi function me hm abhi ye comment v likh rhe hai isse ye hoga ki ye fir just niche wala me setText me jo v string linkenge usko text area me change kar dega \r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n}\r\nconst handleClearClick = () => \r\n{\r\n    let newText = 'Enter Text here';\r\n    setText(newText);\r\n}\r\n\r\nconst handleOnChange = (event) =>\r\n{\r\n    console.log('Onchange button clicked')\r\n    setText(event.target.value);\r\n}\r\nconst handleCopyClick = () =>\r\n{\r\n    let text = document.getElementById('myBox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    console.log(\"handlecopyclick execute\");\r\n}\r\nconst handleExtraSpace = () =>\r\n{\r\n    console.log(\"Inside extra space\" );\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n}\r\n    \r\n    const [text , setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container \"style={{color : props.mode ==='dark'?'white':'#042743'}}>\r\n      \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myBox\" className=\"form-label\"> <h2>{props.heading}</h2> </label>\r\n                {/* //ek curly brace lagaie style me kyuki javascript use karna tha or dusra wala lagaie kyuki object bnana tha */}\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange}  style={{backgroundColor : props.mode ==='dark'?'white':'grey',color : props.mode ==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n  \r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color : props.mode ==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes reads</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length > 0 ?text:\"Enter the text to preview\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// import Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light')// whether dark mode enable or not\n  let toogleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743 ';\n      document.title = 'TextUtils - Dark Mode'\n      setInterval(() => {\n        document.title = 'TextUtils is amazing';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'Install TextUtils';\n      }, 1500);\n\n\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      document.title = 'TextUtils - Light Mode';\n\n    }\n  }\n  return (\n    <>\n\n\n<Router>  \n      <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toogleMode={toogleMode} />\n\n      {/* <Alert alert = 'This is alert'/> */}\n\n<div className=\"container my-3\" >\n      \n      <Switch>\n          <Route exacat path=\"/about\">\n                 <About />\n           </Route>\n\n          <Route exact path=\"/\">\n                  <TextForm heading=\"Enter the Text to Analyse\" mode ={mode} />\n          </Route>\n      </Switch>\n  </div>\n\n</Router>\n      \n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}